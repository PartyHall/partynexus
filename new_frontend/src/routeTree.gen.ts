/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as RegisterIndexRouteImport } from './routes/register/index'
import { Route as LoginIndexRouteImport } from './routes/login/index'
import { Route as AuthenticatedIndexRouteImport } from './routes/_authenticated/index'
import { Route as AuthenticatedKaraokeIndexRouteImport } from './routes/_authenticated/karaoke/index'
import { Route as AuthenticatedAccountIndexRouteImport } from './routes/_authenticated/account/index'
import { Route as AuthenticatedKaraokeRequestRouteImport } from './routes/_authenticated/karaoke/request'
import { Route as AuthenticatedKaraokeNewRouteImport } from './routes/_authenticated/karaoke/new'
import { Route as AuthenticatedKaraokeIdRouteImport } from './routes/_authenticated/karaoke/$id'
import { Route as AuthenticatedAccountChangePasswordRouteImport } from './routes/_authenticated/account/change-password'
import { Route as AuthenticatedAccountAppliancesRouteRouteImport } from './routes/_authenticated/account/appliances/route'
import { Route as AuthenticatedAccountAppliancesIndexRouteImport } from './routes/_authenticated/account/appliances/index'
import { Route as AuthenticatedAccountAppliancesNewRouteImport } from './routes/_authenticated/account/appliances/new'
import { Route as AuthenticatedAccountAppliancesIdRouteImport } from './routes/_authenticated/account/appliances/$id'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterIndexRoute = RegisterIndexRouteImport.update({
  id: '/register/',
  path: '/register/',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginIndexRoute = LoginIndexRouteImport.update({
  id: '/login/',
  path: '/login/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedIndexRoute = AuthenticatedIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedKaraokeIndexRoute =
  AuthenticatedKaraokeIndexRouteImport.update({
    id: '/karaoke/',
    path: '/karaoke/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAccountIndexRoute =
  AuthenticatedAccountIndexRouteImport.update({
    id: '/account/',
    path: '/account/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedKaraokeRequestRoute =
  AuthenticatedKaraokeRequestRouteImport.update({
    id: '/karaoke/request',
    path: '/karaoke/request',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedKaraokeNewRoute = AuthenticatedKaraokeNewRouteImport.update({
  id: '/karaoke/new',
  path: '/karaoke/new',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedKaraokeIdRoute = AuthenticatedKaraokeIdRouteImport.update({
  id: '/karaoke/$id',
  path: '/karaoke/$id',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const AuthenticatedAccountChangePasswordRoute =
  AuthenticatedAccountChangePasswordRouteImport.update({
    id: '/account/change-password',
    path: '/account/change-password',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAccountAppliancesRouteRoute =
  AuthenticatedAccountAppliancesRouteRouteImport.update({
    id: '/account/appliances',
    path: '/account/appliances',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAccountAppliancesIndexRoute =
  AuthenticatedAccountAppliancesIndexRouteImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => AuthenticatedAccountAppliancesRouteRoute,
  } as any)
const AuthenticatedAccountAppliancesNewRoute =
  AuthenticatedAccountAppliancesNewRouteImport.update({
    id: '/new',
    path: '/new',
    getParentRoute: () => AuthenticatedAccountAppliancesRouteRoute,
  } as any)
const AuthenticatedAccountAppliancesIdRoute =
  AuthenticatedAccountAppliancesIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => AuthenticatedAccountAppliancesRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof AuthenticatedIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/account/appliances': typeof AuthenticatedAccountAppliancesRouteRouteWithChildren
  '/account/change-password': typeof AuthenticatedAccountChangePasswordRoute
  '/karaoke/$id': typeof AuthenticatedKaraokeIdRoute
  '/karaoke/new': typeof AuthenticatedKaraokeNewRoute
  '/karaoke/request': typeof AuthenticatedKaraokeRequestRoute
  '/account': typeof AuthenticatedAccountIndexRoute
  '/karaoke': typeof AuthenticatedKaraokeIndexRoute
  '/account/appliances/$id': typeof AuthenticatedAccountAppliancesIdRoute
  '/account/appliances/new': typeof AuthenticatedAccountAppliancesNewRoute
  '/account/appliances/': typeof AuthenticatedAccountAppliancesIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof AuthenticatedIndexRoute
  '/login': typeof LoginIndexRoute
  '/register': typeof RegisterIndexRoute
  '/account/change-password': typeof AuthenticatedAccountChangePasswordRoute
  '/karaoke/$id': typeof AuthenticatedKaraokeIdRoute
  '/karaoke/new': typeof AuthenticatedKaraokeNewRoute
  '/karaoke/request': typeof AuthenticatedKaraokeRequestRoute
  '/account': typeof AuthenticatedAccountIndexRoute
  '/karaoke': typeof AuthenticatedKaraokeIndexRoute
  '/account/appliances/$id': typeof AuthenticatedAccountAppliancesIdRoute
  '/account/appliances/new': typeof AuthenticatedAccountAppliancesNewRoute
  '/account/appliances': typeof AuthenticatedAccountAppliancesIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/_authenticated/': typeof AuthenticatedIndexRoute
  '/login/': typeof LoginIndexRoute
  '/register/': typeof RegisterIndexRoute
  '/_authenticated/account/appliances': typeof AuthenticatedAccountAppliancesRouteRouteWithChildren
  '/_authenticated/account/change-password': typeof AuthenticatedAccountChangePasswordRoute
  '/_authenticated/karaoke/$id': typeof AuthenticatedKaraokeIdRoute
  '/_authenticated/karaoke/new': typeof AuthenticatedKaraokeNewRoute
  '/_authenticated/karaoke/request': typeof AuthenticatedKaraokeRequestRoute
  '/_authenticated/account/': typeof AuthenticatedAccountIndexRoute
  '/_authenticated/karaoke/': typeof AuthenticatedKaraokeIndexRoute
  '/_authenticated/account/appliances/$id': typeof AuthenticatedAccountAppliancesIdRoute
  '/_authenticated/account/appliances/new': typeof AuthenticatedAccountAppliancesNewRoute
  '/_authenticated/account/appliances/': typeof AuthenticatedAccountAppliancesIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/register'
    | '/account/appliances'
    | '/account/change-password'
    | '/karaoke/$id'
    | '/karaoke/new'
    | '/karaoke/request'
    | '/account'
    | '/karaoke'
    | '/account/appliances/$id'
    | '/account/appliances/new'
    | '/account/appliances/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/login'
    | '/register'
    | '/account/change-password'
    | '/karaoke/$id'
    | '/karaoke/new'
    | '/karaoke/request'
    | '/account'
    | '/karaoke'
    | '/account/appliances/$id'
    | '/account/appliances/new'
    | '/account/appliances'
  id:
    | '__root__'
    | '/_authenticated'
    | '/_authenticated/'
    | '/login/'
    | '/register/'
    | '/_authenticated/account/appliances'
    | '/_authenticated/account/change-password'
    | '/_authenticated/karaoke/$id'
    | '/_authenticated/karaoke/new'
    | '/_authenticated/karaoke/request'
    | '/_authenticated/account/'
    | '/_authenticated/karaoke/'
    | '/_authenticated/account/appliances/$id'
    | '/_authenticated/account/appliances/new'
    | '/_authenticated/account/appliances/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  LoginIndexRoute: typeof LoginIndexRoute
  RegisterIndexRoute: typeof RegisterIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register/': {
      id: '/register/'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login/': {
      id: '/login/'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/': {
      id: '/_authenticated/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof AuthenticatedIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/karaoke/': {
      id: '/_authenticated/karaoke/'
      path: '/karaoke'
      fullPath: '/karaoke'
      preLoaderRoute: typeof AuthenticatedKaraokeIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/account/': {
      id: '/_authenticated/account/'
      path: '/account'
      fullPath: '/account'
      preLoaderRoute: typeof AuthenticatedAccountIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/karaoke/request': {
      id: '/_authenticated/karaoke/request'
      path: '/karaoke/request'
      fullPath: '/karaoke/request'
      preLoaderRoute: typeof AuthenticatedKaraokeRequestRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/karaoke/new': {
      id: '/_authenticated/karaoke/new'
      path: '/karaoke/new'
      fullPath: '/karaoke/new'
      preLoaderRoute: typeof AuthenticatedKaraokeNewRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/karaoke/$id': {
      id: '/_authenticated/karaoke/$id'
      path: '/karaoke/$id'
      fullPath: '/karaoke/$id'
      preLoaderRoute: typeof AuthenticatedKaraokeIdRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/account/change-password': {
      id: '/_authenticated/account/change-password'
      path: '/account/change-password'
      fullPath: '/account/change-password'
      preLoaderRoute: typeof AuthenticatedAccountChangePasswordRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/account/appliances': {
      id: '/_authenticated/account/appliances'
      path: '/account/appliances'
      fullPath: '/account/appliances'
      preLoaderRoute: typeof AuthenticatedAccountAppliancesRouteRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/account/appliances/': {
      id: '/_authenticated/account/appliances/'
      path: '/'
      fullPath: '/account/appliances/'
      preLoaderRoute: typeof AuthenticatedAccountAppliancesIndexRouteImport
      parentRoute: typeof AuthenticatedAccountAppliancesRouteRoute
    }
    '/_authenticated/account/appliances/new': {
      id: '/_authenticated/account/appliances/new'
      path: '/new'
      fullPath: '/account/appliances/new'
      preLoaderRoute: typeof AuthenticatedAccountAppliancesNewRouteImport
      parentRoute: typeof AuthenticatedAccountAppliancesRouteRoute
    }
    '/_authenticated/account/appliances/$id': {
      id: '/_authenticated/account/appliances/$id'
      path: '/$id'
      fullPath: '/account/appliances/$id'
      preLoaderRoute: typeof AuthenticatedAccountAppliancesIdRouteImport
      parentRoute: typeof AuthenticatedAccountAppliancesRouteRoute
    }
  }
}

interface AuthenticatedAccountAppliancesRouteRouteChildren {
  AuthenticatedAccountAppliancesIdRoute: typeof AuthenticatedAccountAppliancesIdRoute
  AuthenticatedAccountAppliancesNewRoute: typeof AuthenticatedAccountAppliancesNewRoute
  AuthenticatedAccountAppliancesIndexRoute: typeof AuthenticatedAccountAppliancesIndexRoute
}

const AuthenticatedAccountAppliancesRouteRouteChildren: AuthenticatedAccountAppliancesRouteRouteChildren =
  {
    AuthenticatedAccountAppliancesIdRoute:
      AuthenticatedAccountAppliancesIdRoute,
    AuthenticatedAccountAppliancesNewRoute:
      AuthenticatedAccountAppliancesNewRoute,
    AuthenticatedAccountAppliancesIndexRoute:
      AuthenticatedAccountAppliancesIndexRoute,
  }

const AuthenticatedAccountAppliancesRouteRouteWithChildren =
  AuthenticatedAccountAppliancesRouteRoute._addFileChildren(
    AuthenticatedAccountAppliancesRouteRouteChildren,
  )

interface AuthenticatedRouteRouteChildren {
  AuthenticatedIndexRoute: typeof AuthenticatedIndexRoute
  AuthenticatedAccountAppliancesRouteRoute: typeof AuthenticatedAccountAppliancesRouteRouteWithChildren
  AuthenticatedAccountChangePasswordRoute: typeof AuthenticatedAccountChangePasswordRoute
  AuthenticatedKaraokeIdRoute: typeof AuthenticatedKaraokeIdRoute
  AuthenticatedKaraokeNewRoute: typeof AuthenticatedKaraokeNewRoute
  AuthenticatedKaraokeRequestRoute: typeof AuthenticatedKaraokeRequestRoute
  AuthenticatedAccountIndexRoute: typeof AuthenticatedAccountIndexRoute
  AuthenticatedKaraokeIndexRoute: typeof AuthenticatedKaraokeIndexRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedIndexRoute: AuthenticatedIndexRoute,
  AuthenticatedAccountAppliancesRouteRoute:
    AuthenticatedAccountAppliancesRouteRouteWithChildren,
  AuthenticatedAccountChangePasswordRoute:
    AuthenticatedAccountChangePasswordRoute,
  AuthenticatedKaraokeIdRoute: AuthenticatedKaraokeIdRoute,
  AuthenticatedKaraokeNewRoute: AuthenticatedKaraokeNewRoute,
  AuthenticatedKaraokeRequestRoute: AuthenticatedKaraokeRequestRoute,
  AuthenticatedAccountIndexRoute: AuthenticatedAccountIndexRoute,
  AuthenticatedKaraokeIndexRoute: AuthenticatedKaraokeIndexRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  LoginIndexRoute: LoginIndexRoute,
  RegisterIndexRoute: RegisterIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
